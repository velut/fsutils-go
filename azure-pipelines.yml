# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: ubuntu-latest
      gorootDir: /usr/local
    mac:
      imageName: macos-latest
      gorootDir: /usr/local
    windows:
      imageName: windows-latest
      gorootDir: C:\
  maxParallel: 3

pool:
  vmImage: $(imageName)

variables:
  GOROOT: '$(gorootDir)/go' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
  GOVERSION: 1.12
  GO111MODULE: 'on'

steps:
- bash: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- task: GoTool@0
  inputs:
    version: $(GOVERSION)
  displayName: 'Install Go $(GOVERSION)'

- bash: |
    printf "Go location: $(which go)\n"
    printf "Go version: $(go version)\n"
    printf "\n\nGo environment:\n\n"
    go env
    printf "\n\nSystem environment:\n\n"
    env
  displayName: Print environment info

- bash: |
    go get github.com/magefile/mage
  displayName: 'Install Mage'

- bash: |
    mage -v test
  workingDirectory: '$(modulePath)'
  displayName: 'Run tests'
